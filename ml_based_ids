from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import classification_report, accuracy_score
import pandas as pd

# Simulated dataset
data = {
    'src_bytes': [500, 1500, 700, 2000, 1200, 900],
    'protocol_type': ['tcp', 'tcp', 'icmp', 'udp', 'icmp', 'tcp'],
    'attack': [0, 1, 1, 1, 1, 0]  # 0: Safe, 1: Attack
}
df = pd.DataFrame(data)

# Encode categorical data (e.g., protocol_type)
df['protocol_type'] = df['protocol_type'].astype('category').cat.codes

# Features and labels
X = df[['src_bytes', 'protocol_type']]
y = df['attack']

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# KNN Classifier
knn = KNeighborsClassifier(n_neighbors=3)
knn.fit(X_train, y_train)

# Predict and evaluate
y_pred = knn.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))
